version: '3.8'

services:
  traefik:
    image: traefik:v2.10
    container_name: ${PROJECT_NAME}-webserver
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.le.acme.email=your-email@example.com"
      - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.le.acme.tlschallenge=true"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"
    networks:
      - hashhedge-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`hashhedge.com`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=le"
    networks:
      - hashhedge-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.hashhedge.com`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certresolver=le"
    networks:
      - hashhedge-network

  postgres:
    container_name: ${PROJECT_NAME}-db
    image: postgres:13
    environment:
      - POSTGRES_USER=hashhedge
      - POSTGRES_PASSWORD=hashhedge_secret
      - POSTGRES_DB=hashhedge
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hashhedge"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - hashhedge-network
    restart: unless-stopped

  bitcoin-node:
    image: ruimarinho/bitcoin-core:latest
    container_name: ${PROJECT_NAME}-bitcoin-node
    command:
      - "-signet"
      - "-server"
      - "-rpcallowip=0.0.0.0/0"
      - "-rpcbind=0.0.0.0"
      - "-rpcuser=bitcoin"
      - "-rpcpassword=bitcoin"
    volumes:
      - bitcoin-data:/home/bitcoin/.bitcoin
    ports:
      - "38332:38332" # Signet RPC port
      - "38333:38333" # Signet P2P port
    networks:
      - hashhedge-network
    restart: unless-stopped

  aspd:
    build:
      context: ./hashhedge-bark/
      dockerfile: Dockerfile.aspd
    container_name: ${PROJECT_NAME}-aspd
    depends_on:
      - postgres
      - bitcoin-node
    environment:
      - POSTGRES_USER=hashhedge
      - POSTGRES_PASSWORD=hashhedge_secret
      - POSTGRES_DB=hashhedge
      - POSTGRES_HOST=postgres
      - BITCOIN_RPC_HOST=bitcoin-node
      - BITCOIN_RPC_PORT=38332
      - BITCOIN_RPC_USER=bitcoin
      - BITCOIN_RPC_PASSWORD=bitcoin
      - BITCOIN_NETWORK=signet
    volumes:
      - aspd-data:/data
    networks:
      - hashhedge-network
    restart: unless-stopped

networks:
  hashhedge-network:
    driver: bridge

volumes:
  postgres-data:
  bitcoin-data:
  aspd-data:
